{"version":3,"sources":["components/Resume.js","App.js","serviceWorker.js","index.js","profile.png"],"names":["Resume","props","fetch","then","res","json","data","console","log","info","profiles","location","i","className","src","Img","alt","style","width","basic","name","role","phone","email","carrer","border","technicalskills","technicalskills1","technicalskills2","workshops","workshops1","Home","profile","map","value","index","key","img","to","pathname","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"+rCAKe,SAASA,EAAOC,GAC/BC,MAAM,+CACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAI,OAAEC,QAAQC,IAAIF,MAIxB,IAAIG,EAAKH,EAAKI,SAAST,EAAMU,SAASL,KAAKM,GACvC,OACI,yBAAKC,UAAU,8BACZ,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,QAC1B,yBAAKA,UAAU,aACb,yBAAKC,IAAKC,IAAKC,IAAI,eAAeC,MAAO,CAACC,MAAM,UAClD,4BAAKT,EAAKU,MAAMC,MAChB,4BAAKX,EAAKU,MAAME,MAChB,4BAAKZ,EAAKU,MAAMG,OAChB,4BAAKb,EAAKU,MAAMI,UAKL,yBAAKV,UAAU,gBAChB,yBAAKA,UAAU,QAChB,yBAAKA,UAAU,aAChB,iDACA,4BAAKJ,EAAKe,QACV,6BACA,iDACH,2BAAOC,OAAO,KACZ,4BACC,sCACA,uDACA,+CACS,2CAEV,4BACC,mCACA,2DACA,oCACS,oCAEV,4BACC,qCACA,4DACA,oCACS,oCAGV,4BACC,sCACA,yDACA,oCACS,qCAIJ,6BACD,gDACA,4BAAKhB,EAAKiB,iBACV,4BAAKjB,EAAKkB,kBACV,4BAAKlB,EAAKmB,kBACV,6BACA,yCACA,4BAAKnB,EAAKoB,WACV,4BAAKpB,EAAKqB,gB,kBCnBrB,IAAIC,EAAK,WACN,IAAIC,EAAQ1B,EAAKI,SAEjB,OADAH,QAAQC,IAAIwB,GAER,yBAAKnB,UAAU,8BAEXmB,EAAQC,KAAI,SAACC,EAAMC,GAAP,OACZ,yBAAKtB,UAAU,mCAAkCuB,IAAKD,GACtD,yBAAKtB,UAAU,QACf,yBAAKA,UAAU,aACf,4BAAKqB,EAAMf,MAAMC,MACjB,yBAAKN,IAAKuB,IAAKrB,IAAI,eAAeC,MAAO,CAACC,MAAM,UAEhD,kBAAC,IAAD,CAAMoB,GAAI,CAACC,SAAS,UAAWjC,KAAK,CAACM,EAAEuB,IAAStB,UAAU,mBAA1D,mBAUG2B,EA1Df,WACE,OACE,yBAAK3B,UAAU,OAuBnB,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,IAAIC,UAAWZ,IACjC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,UAAUC,UAAW3C,OC/BnB4C,QACW,cAA7BC,OAAOlC,SAASmC,UAEe,UAA7BD,OAAOlC,SAASmC,UAEhBD,OAAOlC,SAASmC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACA,kBAAC,EAAD,QAGFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpD,MAAK,SAAAqD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpD,QAAQoD,MAAMA,EAAMC,a,kBEzI5BC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.d1579ee6.chunk.js","sourcesContent":["import React from 'react';\r\nimport data from\"../data/data.json\";\r\nimport Img from \"../profile.png\";\r\n\r\n\r\nexport default function Resume(props) {\r\nfetch(\"https://jsonplaceholder.typicode.com/posts/\")\r\n.then(res=>res.json())\r\n.then(data=>console.log(data))\r\n\r\n// let info=data.profiles[props.location.data.i]\r\n// console.log(info.basic.name)\r\nlet info=data.profiles[props.location.data.i]\r\n    return(\r\n        <div className=\"row justify-content-center\">\r\n           <div className=\"col-lg-5 m-4\">\r\n           <div className=\"card\">\r\n<div className=\"card-body\">\r\n  <img src={Img} alt=\"profile Icon\" style={{width:\"25em\"}}/>\r\n<h1>{info.basic.name}</h1>\r\n<h1>{info.basic.role}</h1>\r\n<h5>{info.basic.phone}</h5>\r\n<h5>{info.basic.email}</h5>\r\n</div>\r\n</div>\r\n</div>\r\n      \r\n           <div className=\"col-lg-5 m-4\">\r\n          <div className=\"card\">\r\n         <div className=\"card-body\">\r\n        <h1>Career Objective:</h1>\r\n        <h4>{info.carrer}</h4>\r\n        <hr></hr>\r\n        <h1>Education Details</h1>\r\n\t    <table border=\"1\">\r\n \t    \t<tr>\r\n \t    \t\t<th>Course</th>\r\n \t    \t\t<th>Name of the Institution</th>\r\n \t    \t\t<th>Year Of Passing</th>\r\n                 <th>percentage</th>\r\n \t    \t</tr>\r\n \t    \t<tr>\r\n \t    \t\t<td>ssc</td>\r\n \t    \t\t<td>Kesava Reddy Concept School</td>\r\n \t    \t\t<td>2015</td>\r\n                 <td>75%</td>\r\n \t    \t</tr>\r\n \t    \t<tr>\r\n \t    \t\t<td>inter</td>\r\n \t    \t\t<td>Sri Chaitanya Junior College</td>\r\n \t    \t\t<td>2017</td>\r\n                 <td>90%</td>\r\n\r\n \t    \t</tr>\r\n \t    \t<tr>\r\n \t    \t\t<td>B.Tech</td>\r\n \t    \t\t<td>Sri Venteswara University</td>\r\n \t    \t\t<td>2021</td>\r\n                 <td>75%</td>\r\n \t    \t</tr>\r\n            \r\n             </table>\r\n             <hr></hr>\r\n            <h1>Technical Skills</h1>\r\n            <h4>{info.technicalskills}</h4>\r\n            <h4>{info.technicalskills1}</h4>\r\n            <h4>{info.technicalskills2}</h4>\r\n            <hr></hr>\r\n            <h1>Workshops</h1>\r\n            <h4>{info.workshops}</h4>\r\n            <h4>{info.workshops1}</h4>\r\n\r\n\r\n\r\n            \r\n    </div>\r\n</div>\r\n    </div>\r\n \r\n        </div>\r\n    )\r\n}","import React from 'react';\n// import Logo from './logo.svg';\nimport './App.css';\n// import Hello from \"./Hello\";\n// import logo from \"./logo.svg\";\nimport img from \"./profile.png\";\n// import Wish from \"./Wish\";\n// import Greeting from \"./components/Greeting\";\n// import Welcome from \"./components/Welcome\";\n// import States from \"./components/State\";\n//import ClassState from \"./components/classState\";\n//import Hooks from \"./components/Hooks\";\nimport data from \"./data/data.json\";\nimport Resume from \"./components/Resume\";\nimport { Route ,Link,BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className='App'>\n   {/*} <ClassState></ClassState>\n     <h1>Using Hooks()</h1>\n     <Hooks></Hooks>\n    <h1>APSSDC</h1>\n  <h2>Puneeth</h2>*/}\n    \n     {/*<Home/>*/}\n     {/*<Hello/>*/}\n     {/*<Wish />*/}\n\n{/*<Greeting name=\"Puneeth\" mail=\"puneeth@gmail.com\">\n <img src={logo} style={{width:\"200px\"}}/>\n </Greeting>\n <Greeting name=\"Ravi\" mail=\"ravi@gmail.com\">\n <p> Hello APSSDC</p>\n <p> Hello Puneeth</p>\n </Greeting>\n <h1>We are creating Class Component & pass the pops</h1>\n <Welcome></Welcome>\n <Welcome></Welcome>*/}\n{/*states*/}\n{/*<States/>*/}\n<BrowserRouter>\n<Route exact path=\"/\" component={Home}/>\n<Route exact path=\"/resume\" component={Resume}/>\n  </BrowserRouter>\n{/*<Home />*/}\n</div>\n\n          );\n }\n\n let Home=()=>{\n    let profile=data.profiles;\n    console.log(profile);\n    return(\n        <div className=\"row justify-content-center\">\n        {\n            profile.map((value,index)=>(\n            <div className=\"col-sm-10 col-md-4 col-lg-4 mt-1\"key={index}>\n            <div className=\"card\">\n            <div className=\"card-body\">\n            <h1>{value.basic.name}</h1>\n            <img src={img} alt=\"Profile Icon\" style={{width:\"15em\"}}/>\n            \n            <Link to={{pathname:\"/Resume\", data:{i:index}}} className=\"btn btn-primary\">profile</Link>\n            </div>\n            </div>\n            </div>\n            ))\n }\n        </div>\n);\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile.ac1ae8c4.png\";"],"sourceRoot":""}